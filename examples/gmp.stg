-- gmp in llvm (clang):
-- The derived `read` instance for llvm.ast.type is a little too weak for structs and pointers
-- These are declared internally for now, maybe it is possible to use an llvm frontend
-- and withModuleFromBitcode (llvm-hs ffi) and splice that in..
-- Alternatively we write our own llvm type parser.
-- Anyway for now the declarations are part of the rts
-- type Integer = type { i32, i32, i64* }
-- declare i32 @__gmpz_init_set_str(Integer*, i8*, i32) #1
-- declare void @__gmpz_add(Integer*, Integer*, Integer*) #1
-- declare i8* @__gmpz_get_str(i8*, i32, Integer*) #1

--  external libc functions + printing helpers

extern putchar :: Int -> Int
extern puts :: CharPtr -> Int
externVarArg printf :: CharPtr -> Int
putDouble d = printf "%d" d
